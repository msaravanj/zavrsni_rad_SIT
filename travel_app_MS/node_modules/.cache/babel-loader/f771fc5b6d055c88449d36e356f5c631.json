{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dell\\\\Desktop\\\\travel_app\\\\src\\\\components\\\\BusInputForm.js\",\n    _s = $RefreshSig$();\n\nimport classes from \"./BusInputForm.module.css\";\nimport React, { useState, useRef } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useGranularEffect } from \"granular-hooks\";\nimport { fromLocationActions, toLocationActions, tripsActions } from \"../store/index\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { Row, Col, Container, Button, Form, Alert } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst BusInputForm = props => {\n  _s();\n\n  const todaysDate = () => {\n    const date = new Date();\n    let day = date.getDate();\n    let month = date.getMonth() + 1;\n    let year = date.getFullYear();\n    if (month < 10) month = \"0\" + month;\n    if (day < 10) day = \"0\" + day;\n    const today = year + \"-\" + month + \"-\" + day;\n    return today;\n  };\n\n  const dispatch = useDispatch();\n  const [cityNameFrom, setCityNameFrom] = useState(\"\");\n  const [cityNameTo, setCityNameTo] = useState(\"\");\n  const [tripDate, setTripDate] = useState(todaysDate());\n  const [cityIdFrom, setCityIdFrom] = useState();\n  const [cityIdTo, setCityIdTo] = useState();\n  const [isFindFinished, setIsFindFinished] = useState(false);\n  const [searchClicked, setSearchClicked] = useState(1);\n  const [effectFinished, setEffectFinished] = useState(1);\n  const [formIsTouched, setFormIsTouched] = useState(false);\n  const [fromCityError, setFromCityError] = useState({\n    error: false\n  });\n  const [toCityError, setToCityError] = useState({\n    error: false\n  });\n  const [flixTripsError, setFlixTripsError] = useState({\n    error: false\n  });\n  const [autocompleteFromError, setAutocompleteFromError] = useState({\n    error: false\n  });\n  const [autocompleteToError, setAutocompleteToError] = useState({\n    error: false\n  });\n  const initialRender = useRef(true);\n  const initialRender1 = useRef(true);\n  const {\n    onShowTable\n  } = props;\n  const fromCityIsValid = cityNameFrom.trim() !== \"\";\n  const toCityIsValid = cityNameTo.trim() !== \"\";\n  const urlGeo = \"https://address-from-to-latitude-longitude.p.rapidapi.com/geolocationapi?address=\";\n  const optionsGeo = {\n    method: \"GET\",\n    headers: {\n      \"X-RapidAPI-Key\": \"b1ea854598mshf9e4713004ceb47p17ac51jsna4065fbbf64a\",\n      \"X-RapidAPI-Host\": \"address-from-to-latitude-longitude.p.rapidapi.com\"\n    }\n  };\n\n  const fetchFromLocationHandler = cityName => {\n    fetch(urlGeo + cityName, optionsGeo).then(response => response.json()).then(data => {\n      const lon = data.Results[0].longitude;\n      const lat = data.Results[0].latitude;\n      dispatch(fromLocationActions.uploadLocation({\n        location: [lat, lon]\n      }));\n      setFromCityError({\n        error: false\n      });\n    }).catch(err => {\n      console.error(err);\n      dispatch(tripsActions.uploadTrips({\n        trips: []\n      }));\n      dispatch(fromLocationActions.uploadLocationChanged({\n        isFromChanged: false\n      }));\n      setFromCityError({\n        error: true\n      });\n    });\n  };\n\n  const fetchToLocationHandler = cityName => {\n    fetch(urlGeo + cityName, optionsGeo).then(response => response.json()).then(data => {\n      const lon = data.Results[0].longitude;\n      const lat = data.Results[0].latitude;\n      dispatch(toLocationActions.uploadLocation({\n        location: [lat, lon]\n      }));\n      setToCityError({\n        error: false\n      });\n    }).catch(err => {\n      console.error(err);\n      dispatch(tripsActions.uploadTrips({\n        trips: []\n      }));\n      dispatch(toLocationActions.uploadLocationChanged({\n        isToChanged: false\n      }));\n      setToCityError({\n        error: true\n      });\n    });\n  };\n\n  const optionsAutocomplete = {\n    method: \"GET\",\n    headers: {\n      \"X-RapidAPI-Key\": \"b1ea854598mshf9e4713004ceb47p17ac51jsna4065fbbf64a\",\n      \"X-RapidAPI-Host\": \"flixbus2.p.rapidapi.com\"\n    }\n  };\n\n  const fetchAutocompleteFromCity = cityName => {\n    fetch(`https://flixbus2.p.rapidapi.com/autocomplete?query=${cityName}`, optionsAutocomplete).then(response => response.json()).then(data => {\n      const city_id = data[0].city.legacy_id;\n      setCityIdFrom(city_id);\n      setAutocompleteFromError({\n        error: false\n      });\n    }).catch(err => {\n      console.error(err);\n      props.onShowTable(false);\n      dispatch(tripsActions.uploadTrips({\n        trips: []\n      }));\n      dispatch(fromLocationActions.uploadLocationChanged({\n        isFromChanged: false\n      }));\n      setAutocompleteFromError({\n        error: true\n      });\n    });\n  };\n\n  const fetchAutocompleteToCity = cityName => {\n    fetch(`https://flixbus2.p.rapidapi.com/autocomplete?query=${cityName}`, optionsAutocomplete).then(response => response.json()).then(data => {\n      const city_id = data[0].city.legacy_id;\n      setCityIdTo(city_id);\n      setAutocompleteToError({\n        error: false\n      });\n    }).catch(err => {\n      console.error(err);\n      setAutocompleteToError({\n        error: true\n      });\n      dispatch(tripsActions.uploadTrips({\n        trips: []\n      }));\n      dispatch(toLocationActions.uploadLocationChanged({\n        isToChanged: false\n      }));\n      props.onShowTable(false);\n    });\n  };\n\n  const optionsSearchTrips = {\n    method: \"GET\",\n    headers: {\n      \"X-RapidAPI-Key\": \"b1ea854598mshf9e4713004ceb47p17ac51jsna4065fbbf64a\",\n      \"X-RapidAPI-Host\": \"flixbus.p.rapidapi.com\"\n    }\n  };\n\n  const searchFlixTrips = () => {\n    fetch(`https://flixbus.p.rapidapi.com/v1/search-trips?to_id=${cityIdTo}&from_id=${cityIdFrom}&currency=EUR&departure_date=${tripDate}&number_adult=1&search_by=cities`, optionsSearchTrips).then(response => response.json()).then(data => {\n      let num = 0;\n      const trips = data[0].items;\n      const arr1 = [];\n\n      for (const el of trips) {\n        const from = data[0].from.name;\n        const to = data[0].to.name;\n        const departure = el.departure.timestamp;\n        const arrival = el.arrival.timestamp;\n        const duration = el.duration.hour + \":\" + el.duration.minutes;\n        const price = el.price_total_sum;\n        num = num + 1;\n        const id = num;\n        arr1.push({\n          id: id,\n          from: from,\n          to: to,\n          departure: departure,\n          arrival: arrival,\n          duration: duration,\n          price: price\n        });\n      }\n\n      dispatch(tripsActions.uploadTrips({\n        trips: arr1\n      }));\n      setFlixTripsError({\n        error: false\n      });\n      onShowTable(true);\n    }).catch(err => {\n      console.error(err);\n      dispatch(tripsActions.uploadTrips({\n        trips: []\n      }));\n      setFlixTripsError({\n        error: true\n      });\n      onShowTable(false);\n    });\n  };\n\n  const findBtnActionHandler = () => {\n    try {\n      setFormIsTouched(true);\n      setFlixTripsError({\n        error: false\n      });\n      fetchFromLocationHandler(cityNameFrom);\n      fetchToLocationHandler(cityNameTo);\n      setTimeout(() => {\n        setSearchClicked(searchClicked + 1);\n      }, 1300);\n    } catch {\n      console.log(\"Something went wrong!\");\n    }\n  };\n\n  const showBtnActionHandler = () => {\n    try {\n      searchFlixTrips();\n      props.onShowTable(true);\n      setTimeout(() => {\n        props.onSetViewToTable(true);\n      }, 200);\n      setIsFindFinished(false);\n    } catch {\n      console.log(\"Something went wrong!\");\n    }\n  };\n\n  useGranularEffect(() => {\n    if (initialRender.current) {\n      initialRender.current = false;\n      console.log(\"initial1\");\n      return;\n    } else {\n      console.log(\"first start\");\n\n      if (fromCityError.error === true || toCityError.error === true) {\n        onShowTable(false);\n        return;\n      } else {\n        fetchAutocompleteFromCity(cityNameFrom);\n        fetchAutocompleteToCity(cityNameTo);\n        props.onSetViewToMap(true);\n        setTimeout(() => {\n          setEffectFinished(effectFinished + 1);\n        }, 500);\n        console.log(\"first finished\");\n      }\n    }\n  }, [searchClicked], [cityNameFrom, cityNameTo, fetchAutocompleteFromCity, fetchAutocompleteToCity, fromCityError.error, toCityError.error]);\n  useGranularEffect(() => {\n    if (initialRender1.current) {\n      initialRender1.current = false;\n      console.log(\"initial2\");\n      return;\n    } else {\n      console.log(\"second start\");\n\n      if (autocompleteToError.error === true || autocompleteFromError.error === true) {\n        return;\n      } else {\n        onShowTable(false);\n        props.onSetViewToMap(true);\n        setTimeout(() => {\n          setIsFindFinished(true);\n        }, 1000);\n        console.log(\"second finished\");\n      }\n    }\n  }, [effectFinished], [onShowTable, autocompleteFromError.error, autocompleteToError.error]);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: classes.inputForm,\n    children: [/*#__PURE__*/_jsxDEV(Form, {\n      className: classes.form_1,\n      children: [/*#__PURE__*/_jsxDEV(Row, {\n        className: \"justify-content-md-center\",\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          md: \"auto\",\n          children: /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            controlId: \"exampleForm.ControlInput1\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Travel from\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 311,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"city\" //  placeholder=\"From: city\"\n              ,\n              autoFocus: true,\n              onChange: event => {\n                setCityNameFrom(event.target.value);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 312,\n              columnNumber: 15\n            }, this), !fromCityIsValid && formIsTouched && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: classes.form_text1,\n              children: \"Please provide a valid city name.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 322,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 310,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 309,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          md: \"auto\",\n          children: /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            controlId: \"exampleForm.ControlInput1\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Travel to\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 330,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"city\" //  placeholder=\"To: city\"\n              ,\n              onChange: event => {\n                setCityNameTo(event.target.value);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 331,\n              columnNumber: 15\n            }, this), !toCityIsValid && formIsTouched && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: classes.form_text1,\n              children: \"Please provide a valid city name.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 339,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 329,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 328,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          md: \"auto\",\n          children: /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            controlId: \"exampleForm.ControlInput1\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Choose date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 347,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"date\",\n              defaultValue: todaysDate.toString,\n              min: new Date().toISOString().split(\"T\")[0],\n              onChange: event => {\n                setTripDate(event.target.value);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 348,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 346,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 345,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 308,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        className: \"justify-content-md-center\",\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          xs: true,\n          lg: \"1\",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            type: \"button\",\n            disabled: cityNameFrom.length === 0 || cityNameTo.length === 0,\n            onClick: findBtnActionHandler,\n            children: \"Search\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 361,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 360,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          xs: true,\n          lg: \"1\",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"success\",\n            type: \"button\",\n            disabled: !isFindFinished || toCityError.error || fromCityError.error || autocompleteFromError.error || autocompleteToError.error,\n            onClick: showBtnActionHandler,\n            children: \"Show trips\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 370,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 369,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 359,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 307,\n      columnNumber: 7\n    }, this), fromCityError.error && /*#__PURE__*/_jsxDEV(Alert, {\n      variant: \"danger\",\n      children: \"Couldn't find city from \\\"Travel from\\\" field. Check your input and try again.\"\n    }, \"danger1\", false, {\n      fileName: _jsxFileName,\n      lineNumber: 388,\n      columnNumber: 9\n    }, this), toCityError.error && /*#__PURE__*/_jsxDEV(Alert, {\n      variant: \"danger\",\n      children: \"Could't find city from \\\"Travel to\\\" field. Check your input and try again.\"\n    }, \"danger2\", false, {\n      fileName: _jsxFileName,\n      lineNumber: 394,\n      columnNumber: 9\n    }, this), autocompleteFromError.error && /*#__PURE__*/_jsxDEV(Alert, {\n      variant: \"danger\",\n      children: \"Couldn't find any Flixbus route for city from \\\"Travel from\\\" field. Check your input and try again\"\n    }, \"danger3\", false, {\n      fileName: _jsxFileName,\n      lineNumber: 400,\n      columnNumber: 9\n    }, this), autocompleteToError.error && /*#__PURE__*/_jsxDEV(Alert, {\n      variant: \"danger\",\n      children: \"Couldn't find any Flixbus route for city from \\\"Travel to\\\" field. Check your input and try again\"\n    }, \"danger4\", false, {\n      fileName: _jsxFileName,\n      lineNumber: 406,\n      columnNumber: 9\n    }, this), flixTripsError.error && /*#__PURE__*/_jsxDEV(Alert, {\n      variant: \"warning\",\n      children: \"Couldn't find any bus line that matches your request.\"\n    }, \"warning\", false, {\n      fileName: _jsxFileName,\n      lineNumber: 412,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 306,\n    columnNumber: 5\n  }, this);\n};\n\n_s(BusInputForm, \"5vqF7HhHj/ZcYDiQtytUan7BDMY=\", false, function () {\n  return [useDispatch, useGranularEffect, useGranularEffect];\n});\n\n_c = BusInputForm;\nexport default BusInputForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"BusInputForm\");","map":{"version":3,"names":["classes","React","useState","useRef","useDispatch","useGranularEffect","fromLocationActions","toLocationActions","tripsActions","Row","Col","Container","Button","Form","Alert","BusInputForm","props","todaysDate","date","Date","day","getDate","month","getMonth","year","getFullYear","today","dispatch","cityNameFrom","setCityNameFrom","cityNameTo","setCityNameTo","tripDate","setTripDate","cityIdFrom","setCityIdFrom","cityIdTo","setCityIdTo","isFindFinished","setIsFindFinished","searchClicked","setSearchClicked","effectFinished","setEffectFinished","formIsTouched","setFormIsTouched","fromCityError","setFromCityError","error","toCityError","setToCityError","flixTripsError","setFlixTripsError","autocompleteFromError","setAutocompleteFromError","autocompleteToError","setAutocompleteToError","initialRender","initialRender1","onShowTable","fromCityIsValid","trim","toCityIsValid","urlGeo","optionsGeo","method","headers","fetchFromLocationHandler","cityName","fetch","then","response","json","data","lon","Results","longitude","lat","latitude","uploadLocation","location","catch","err","console","uploadTrips","trips","uploadLocationChanged","isFromChanged","fetchToLocationHandler","isToChanged","optionsAutocomplete","fetchAutocompleteFromCity","city_id","city","legacy_id","fetchAutocompleteToCity","optionsSearchTrips","searchFlixTrips","num","items","arr1","el","from","name","to","departure","timestamp","arrival","duration","hour","minutes","price","price_total_sum","id","push","findBtnActionHandler","setTimeout","log","showBtnActionHandler","onSetViewToTable","current","onSetViewToMap","inputForm","form_1","event","target","value","form_text1","toString","toISOString","split","length"],"sources":["C:/Users/dell/Desktop/travel_app/src/components/BusInputForm.js"],"sourcesContent":["import classes from \"./BusInputForm.module.css\";\r\nimport React, { useState, useRef } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useGranularEffect } from \"granular-hooks\";\r\n\r\nimport {\r\n  fromLocationActions,\r\n  toLocationActions,\r\n  tripsActions,\r\n} from \"../store/index\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { Row, Col, Container, Button, Form, Alert } from \"react-bootstrap\";\r\n\r\nconst BusInputForm = (props) => {\r\n  const todaysDate = () => {\r\n    const date = new Date();\r\n\r\n    let day = date.getDate();\r\n    let month = date.getMonth() + 1;\r\n    let year = date.getFullYear();\r\n\r\n    if (month < 10) month = \"0\" + month;\r\n    if (day < 10) day = \"0\" + day;\r\n\r\n    const today = year + \"-\" + month + \"-\" + day;\r\n\r\n    return today;\r\n  };\r\n\r\n  const dispatch = useDispatch();\r\n  const [cityNameFrom, setCityNameFrom] = useState(\"\");\r\n  const [cityNameTo, setCityNameTo] = useState(\"\");\r\n  const [tripDate, setTripDate] = useState(todaysDate());\r\n  const [cityIdFrom, setCityIdFrom] = useState();\r\n  const [cityIdTo, setCityIdTo] = useState();\r\n  const [isFindFinished, setIsFindFinished] = useState(false);\r\n  const [searchClicked, setSearchClicked] = useState(1);\r\n  const [effectFinished, setEffectFinished] = useState(1);\r\n\r\n  const [formIsTouched, setFormIsTouched] = useState(false);\r\n\r\n  const [fromCityError, setFromCityError] = useState({ error: false });\r\n  const [toCityError, setToCityError] = useState({ error: false });\r\n  const [flixTripsError, setFlixTripsError] = useState({ error: false });\r\n  const [autocompleteFromError, setAutocompleteFromError] = useState({\r\n    error: false,\r\n  });\r\n  const [autocompleteToError, setAutocompleteToError] = useState({\r\n    error: false,\r\n  });\r\n\r\n  const initialRender = useRef(true);\r\n  const initialRender1 = useRef(true);\r\n\r\n  const { onShowTable } = props;\r\n  const fromCityIsValid = cityNameFrom.trim() !== \"\";\r\n  const toCityIsValid = cityNameTo.trim() !== \"\";\r\n\r\n  const urlGeo =\r\n    \"https://address-from-to-latitude-longitude.p.rapidapi.com/geolocationapi?address=\";\r\n  const optionsGeo = {\r\n    method: \"GET\",\r\n    headers: {\r\n      \"X-RapidAPI-Key\": \"b1ea854598mshf9e4713004ceb47p17ac51jsna4065fbbf64a\",\r\n      \"X-RapidAPI-Host\": \"address-from-to-latitude-longitude.p.rapidapi.com\",\r\n    },\r\n  };\r\n\r\n  const fetchFromLocationHandler = (cityName) => {\r\n    fetch(urlGeo + cityName, optionsGeo)\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        const lon = data.Results[0].longitude;\r\n        const lat = data.Results[0].latitude;\r\n        dispatch(fromLocationActions.uploadLocation({ location: [lat, lon] }));\r\n\r\n        setFromCityError({ error: false });\r\n      })\r\n      .catch((err) => {\r\n        console.error(err);\r\n        dispatch(tripsActions.uploadTrips({ trips: [] }));\r\n        dispatch(\r\n          fromLocationActions.uploadLocationChanged({ isFromChanged: false })\r\n        );\r\n\r\n        setFromCityError({ error: true });\r\n      });\r\n  };\r\n\r\n  const fetchToLocationHandler = (cityName) => {\r\n    fetch(urlGeo + cityName, optionsGeo)\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        const lon = data.Results[0].longitude;\r\n        const lat = data.Results[0].latitude;\r\n        dispatch(toLocationActions.uploadLocation({ location: [lat, lon] }));\r\n\r\n        setToCityError({ error: false });\r\n      })\r\n      .catch((err) => {\r\n        console.error(err);\r\n        dispatch(tripsActions.uploadTrips({ trips: [] }));\r\n        dispatch(\r\n          toLocationActions.uploadLocationChanged({ isToChanged: false })\r\n        );\r\n\r\n        setToCityError({ error: true });\r\n      });\r\n  };\r\n\r\n  const optionsAutocomplete = {\r\n    method: \"GET\",\r\n    headers: {\r\n      \"X-RapidAPI-Key\": \"b1ea854598mshf9e4713004ceb47p17ac51jsna4065fbbf64a\",\r\n      \"X-RapidAPI-Host\": \"flixbus2.p.rapidapi.com\",\r\n    },\r\n  };\r\n\r\n  const fetchAutocompleteFromCity = (cityName) => {\r\n    fetch(\r\n      `https://flixbus2.p.rapidapi.com/autocomplete?query=${cityName}`,\r\n      optionsAutocomplete\r\n    )\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        const city_id = data[0].city.legacy_id;\r\n\r\n        setCityIdFrom(city_id);\r\n\r\n        setAutocompleteFromError({ error: false });\r\n      })\r\n      .catch((err) => {\r\n        console.error(err);\r\n        props.onShowTable(false);\r\n        dispatch(tripsActions.uploadTrips({ trips: [] }));\r\n        dispatch(\r\n          fromLocationActions.uploadLocationChanged({ isFromChanged: false })\r\n        );\r\n        setAutocompleteFromError({ error: true });\r\n      });\r\n  };\r\n\r\n  const fetchAutocompleteToCity = (cityName) => {\r\n    fetch(\r\n      `https://flixbus2.p.rapidapi.com/autocomplete?query=${cityName}`,\r\n      optionsAutocomplete\r\n    )\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        const city_id = data[0].city.legacy_id;\r\n        setCityIdTo(city_id);\r\n\r\n        setAutocompleteToError({ error: false });\r\n      })\r\n      .catch((err) => {\r\n        console.error(err);\r\n        setAutocompleteToError({ error: true });\r\n        dispatch(tripsActions.uploadTrips({ trips: [] }));\r\n        dispatch(\r\n          toLocationActions.uploadLocationChanged({ isToChanged: false })\r\n        );\r\n\r\n        props.onShowTable(false);\r\n      });\r\n  };\r\n\r\n  const optionsSearchTrips = {\r\n    method: \"GET\",\r\n    headers: {\r\n      \"X-RapidAPI-Key\": \"b1ea854598mshf9e4713004ceb47p17ac51jsna4065fbbf64a\",\r\n      \"X-RapidAPI-Host\": \"flixbus.p.rapidapi.com\",\r\n    },\r\n  };\r\n\r\n  const searchFlixTrips = () => {\r\n    fetch(\r\n      `https://flixbus.p.rapidapi.com/v1/search-trips?to_id=${cityIdTo}&from_id=${cityIdFrom}&currency=EUR&departure_date=${tripDate}&number_adult=1&search_by=cities`,\r\n      optionsSearchTrips\r\n    )\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        let num = 0;\r\n        const trips = data[0].items;\r\n        const arr1 = [];\r\n        for (const el of trips) {\r\n          const from = data[0].from.name;\r\n          const to = data[0].to.name;\r\n          const departure = el.departure.timestamp;\r\n          const arrival = el.arrival.timestamp;\r\n          const duration = el.duration.hour + \":\" + el.duration.minutes;\r\n          const price = el.price_total_sum;\r\n          num = num + 1;\r\n          const id = num;\r\n          arr1.push({\r\n            id: id,\r\n            from: from,\r\n            to: to,\r\n            departure: departure,\r\n            arrival: arrival,\r\n            duration: duration,\r\n            price: price,\r\n          });\r\n        }\r\n        dispatch(tripsActions.uploadTrips({ trips: arr1 }));\r\n        setFlixTripsError({ error: false });\r\n        onShowTable(true);\r\n      })\r\n      .catch((err) => {\r\n        console.error(err);\r\n        dispatch(tripsActions.uploadTrips({ trips: [] }));\r\n        setFlixTripsError({ error: true });\r\n        onShowTable(false);\r\n      });\r\n  };\r\n\r\n  const findBtnActionHandler = () => {\r\n    try {\r\n      setFormIsTouched(true);\r\n      setFlixTripsError({ error: false });\r\n      fetchFromLocationHandler(cityNameFrom);\r\n      fetchToLocationHandler(cityNameTo);\r\n      setTimeout(() => {\r\n        setSearchClicked(searchClicked + 1);\r\n      }, 1300);\r\n    } catch {\r\n      console.log(\"Something went wrong!\");\r\n    }\r\n  };\r\n\r\n  const showBtnActionHandler = () => {\r\n    try {\r\n      searchFlixTrips();\r\n      props.onShowTable(true);\r\n      setTimeout(() => {\r\n        props.onSetViewToTable(true);\r\n      }, 200);\r\n\r\n      setIsFindFinished(false);\r\n    } catch {\r\n      console.log(\"Something went wrong!\");\r\n    }\r\n  };\r\n\r\n  useGranularEffect(\r\n    () => {\r\n      if (initialRender.current) {\r\n        initialRender.current = false;\r\n        console.log(\"initial1\");\r\n        return;\r\n      } else {\r\n        console.log(\"first start\");\r\n        if (fromCityError.error === true || toCityError.error === true) {\r\n          onShowTable(false);\r\n          return;\r\n        } else {\r\n          fetchAutocompleteFromCity(cityNameFrom);\r\n          fetchAutocompleteToCity(cityNameTo);\r\n          props.onSetViewToMap(true);\r\n          setTimeout(() => {\r\n            setEffectFinished(effectFinished + 1);\r\n          }, 500);\r\n          console.log(\"first finished\");\r\n        }\r\n      }\r\n    },\r\n    [searchClicked],\r\n    [\r\n      cityNameFrom,\r\n      cityNameTo,\r\n      fetchAutocompleteFromCity,\r\n      fetchAutocompleteToCity,\r\n      fromCityError.error,\r\n      toCityError.error,\r\n    ]\r\n  );\r\n\r\n  useGranularEffect(\r\n    () => {\r\n      if (initialRender1.current) {\r\n        initialRender1.current = false;\r\n        console.log(\"initial2\");\r\n        return;\r\n      } else {\r\n        console.log(\"second start\");\r\n        if (\r\n          autocompleteToError.error === true ||\r\n          autocompleteFromError.error === true\r\n        ) {\r\n          return;\r\n        } else {\r\n          onShowTable(false);\r\n          props.onSetViewToMap(true);\r\n\r\n          setTimeout(() => {\r\n            setIsFindFinished(true);\r\n          }, 1000);\r\n          console.log(\"second finished\");\r\n        }\r\n      }\r\n    },\r\n    [effectFinished],\r\n    [onShowTable, autocompleteFromError.error, autocompleteToError.error]\r\n  );\r\n\r\n  return (\r\n    <Container className={classes.inputForm}>\r\n      <Form className={classes.form_1}>\r\n        <Row className=\"justify-content-md-center\">\r\n          <Col md=\"auto\">\r\n            <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlInput1\">\r\n              <Form.Label>Travel from</Form.Label>\r\n              <Form.Control\r\n                type=\"city\"\r\n                //  placeholder=\"From: city\"\r\n                autoFocus\r\n                onChange={(event) => {\r\n                  setCityNameFrom(event.target.value);\r\n                }}\r\n              />\r\n\r\n              {!fromCityIsValid && formIsTouched && (\r\n                <p className={classes.form_text1}>\r\n                  Please provide a valid city name.\r\n                </p>\r\n              )}\r\n            </Form.Group>\r\n          </Col>\r\n          <Col md=\"auto\">\r\n            <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlInput1\">\r\n              <Form.Label>Travel to</Form.Label>\r\n              <Form.Control\r\n                type=\"city\"\r\n                //  placeholder=\"To: city\"\r\n                onChange={(event) => {\r\n                  setCityNameTo(event.target.value);\r\n                }}\r\n              />\r\n              {!toCityIsValid && formIsTouched && (\r\n                <p className={classes.form_text1}>\r\n                  Please provide a valid city name.\r\n                </p>\r\n              )}\r\n            </Form.Group>\r\n          </Col>\r\n          <Col md=\"auto\">\r\n            <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlInput1\">\r\n              <Form.Label>Choose date</Form.Label>\r\n              <Form.Control\r\n                type=\"date\"\r\n                defaultValue={todaysDate.toString}\r\n                min={new Date().toISOString().split(\"T\")[0]}\r\n                onChange={(event) => {\r\n                  setTripDate(event.target.value);\r\n                }}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n          </Col>\r\n        </Row>\r\n        <Row className=\"justify-content-md-center\">\r\n          <Col xs lg=\"1\">\r\n            <Button\r\n              type=\"button\"\r\n              disabled={cityNameFrom.length === 0 || cityNameTo.length === 0}\r\n              onClick={findBtnActionHandler}\r\n            >\r\n              Search\r\n            </Button>\r\n          </Col>\r\n          <Col xs lg=\"1\">\r\n            <Button\r\n              variant=\"success\"\r\n              type=\"button\"\r\n              disabled={\r\n                !isFindFinished ||\r\n                toCityError.error ||\r\n                fromCityError.error ||\r\n                autocompleteFromError.error ||\r\n                autocompleteToError.error\r\n              }\r\n              onClick={showBtnActionHandler}\r\n            >\r\n              Show trips\r\n            </Button>\r\n          </Col>\r\n        </Row>\r\n      </Form>\r\n      {fromCityError.error && (\r\n        <Alert key=\"danger1\" variant=\"danger\">\r\n          Couldn't find city from \"Travel from\" field. Check your input and try\r\n          again.\r\n        </Alert>\r\n      )}\r\n      {toCityError.error && (\r\n        <Alert key=\"danger2\" variant=\"danger\">\r\n          Could't find city from \"Travel to\" field. Check your input and try\r\n          again.\r\n        </Alert>\r\n      )}\r\n      {autocompleteFromError.error && (\r\n        <Alert key=\"danger3\" variant=\"danger\">\r\n          Couldn't find any Flixbus route for city from \"Travel from\" field.\r\n          Check your input and try again\r\n        </Alert>\r\n      )}\r\n      {autocompleteToError.error && (\r\n        <Alert key=\"danger4\" variant=\"danger\">\r\n          Couldn't find any Flixbus route for city from \"Travel to\" field. Check\r\n          your input and try again\r\n        </Alert>\r\n      )}\r\n      {flixTripsError.error && (\r\n        <Alert key=\"warning\" variant=\"warning\">\r\n          Couldn't find any bus line that matches your request.\r\n        </Alert>\r\n      )}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default BusInputForm;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}