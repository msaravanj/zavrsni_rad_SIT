{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dell\\\\Desktop\\\\travel_app\\\\src\\\\components\\\\InputForm.js\",\n    _s = $RefreshSig$();\n\nimport classes from \"./InputForm.module.css\";\nimport React, { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { fromLocationActions, toLocationActions, tripsActions } from \"../store/index\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { Row, Col, Container, Button, Form, Alert } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst InputForm = props => {\n  _s();\n\n  const todaysDate = () => {\n    const date = new Date();\n    let day = date.getDate();\n    let month = date.getMonth() + 1;\n    let year = date.getFullYear();\n    if (month < 10) month = \"0\" + month;\n    if (day < 10) day = \"0\" + day;\n    const today = year + \"-\" + month + \"-\" + day;\n    return today;\n  };\n\n  const dispatch = useDispatch();\n  const [cityNameFrom, setCityNameFrom] = useState(\"\");\n  const [cityNameTo, setCityNameTo] = useState(\"\");\n  const [tripDate, setTripDate] = useState(todaysDate());\n  const [cityIdFrom, setCityIdFrom] = useState();\n  const [cityIdTo, setCityIdTo] = useState();\n  const [isFindFinished, setIsFindFinished] = useState(false);\n  const [fromCityValidation, setFromCityValidation] = useState(false);\n  const [toCityValidation, setToCityValidation] = useState(false);\n  const [formIsTouched, setFormIsTouched] = useState(false);\n  const [fromCityError, setFromCityError] = useState(false);\n  const [toCityError, setToCityError] = useState(false);\n  const [flixTripsError, setFlixTripsError] = useState(false);\n  const [autocompleteFromError, setAutocompleteFromError] = useState(false);\n  const [autocompleteToError, setAutocompleteToError] = useState(false);\n  const fromCityIsValid = cityNameFrom.trim() !== \"\";\n  const toCityIsValid = cityNameTo.trim() !== \"\";\n  const urlGeo = \"https://address-from-to-latitude-longitude.p.rapidapi.com/geolocationapi?address=\";\n  const optionsGeo = {\n    method: \"GET\",\n    headers: {\n      \"X-RapidAPI-Key\": \"b1ea854598mshf9e4713004ceb47p17ac51jsna4065fbbf64a\",\n      \"X-RapidAPI-Host\": \"address-from-to-latitude-longitude.p.rapidapi.com\"\n    }\n  };\n\n  function fetchFromLocationHandler(cityName) {\n    fetch(urlGeo + cityName, optionsGeo).then(response => response.json()).then(data => {\n      const lon = data.Results[0].longitude;\n      const lat = data.Results[0].latitude;\n      dispatch(fromLocationActions.uploadLocation({\n        location: [lat, lon]\n      }));\n      setFromCityError(false);\n      return true;\n    }).catch(err => {\n      console.error(err);\n      setFromCityError(true);\n      return false;\n    });\n  }\n\n  function fetchToLocationHandler(cityName) {\n    fetch(urlGeo + cityName, optionsGeo).then(response => response.json()).then(data => {\n      const lon = data.Results[0].longitude;\n      const lat = data.Results[0].latitude;\n      dispatch(toLocationActions.uploadLocation({\n        location: [lat, lon]\n      }));\n      setToCityError(false);\n      return true;\n    }).catch(err => {\n      console.error(err);\n      setToCityError(true);\n      return false;\n    });\n  }\n\n  const optionsAutocomplete = {\n    method: \"GET\",\n    headers: {\n      \"X-RapidAPI-Key\": \"b1ea854598mshf9e4713004ceb47p17ac51jsna4065fbbf64a\",\n      \"X-RapidAPI-Host\": \"flixbus2.p.rapidapi.com\"\n    }\n  };\n\n  const fetchAutocompleteFromCity = cityName => {\n    const myResponse = fetch(`https://flixbus2.p.rapidapi.com/autocomplete?query=${cityName}`, optionsAutocomplete).then(response => response.json()).then(data => {\n      const city_id = data[0].city.legacy_id;\n      setCityIdFrom(city_id);\n      setAutocompleteFromError(false);\n      return true;\n    }).catch(err => {\n      console.error(err);\n      setAutocompleteFromError(true);\n      return false;\n    });\n    return myResponse;\n  };\n\n  const fetchAutocompleteToCity = cityName => {\n    fetch(`https://flixbus2.p.rapidapi.com/autocomplete?query=${cityName}`, optionsAutocomplete).then(response => response.json()).then(data => {\n      const city_id = data[0].city.legacy_id;\n      setCityIdTo(city_id);\n      setAutocompleteToError(false);\n      return true;\n    }).catch(err => {\n      console.error(err);\n      setAutocompleteToError(true);\n      return false;\n    });\n  };\n\n  const optionsSearchTrips = {\n    method: \"GET\",\n    headers: {\n      \"X-RapidAPI-Key\": \"b1ea854598mshf9e4713004ceb47p17ac51jsna4065fbbf64a\",\n      \"X-RapidAPI-Host\": \"flixbus.p.rapidapi.com\"\n    }\n  };\n\n  const searchFlixTrips = () => {\n    fetch(`https://flixbus.p.rapidapi.com/v1/search-trips?to_id=${cityIdTo}&from_id=${cityIdFrom}&currency=EUR&departure_date=${tripDate}&number_adult=1&search_by=cities`, optionsSearchTrips).then(response => response.json()).then(data => {\n      let num = 0;\n      const trips = data[0].items;\n      const arr1 = [];\n\n      for (const el of trips) {\n        const from = data[0].from.name;\n        const to = data[0].to.name;\n        const departure = el.departure.timestamp;\n        const arrival = el.arrival.timestamp;\n        const duration = el.duration.hour + \":\" + el.duration.minutes;\n        const price = el.price_total_sum;\n        num = num + 1;\n        const id = num;\n        arr1.push({\n          id: id,\n          from: from,\n          to: to,\n          departure: departure,\n          arrival: arrival,\n          duration: duration,\n          price: price\n        });\n      }\n\n      dispatch(tripsActions.uploadTrips({\n        trips: arr1\n      }));\n      setFlixTripsError(false);\n    }).catch(err => {\n      console.error(err);\n      setFlixTripsError(true);\n    });\n  };\n\n  const findBtnActionHandler = () => {\n    try {\n      setFormIsTouched(true);\n      const fetchFrom = fetchFromLocationHandler(cityNameFrom);\n      const fetchTo = fetchToLocationHandler(cityNameTo);\n\n      if (fetchFrom === true && fetchTo === true) {\n        const autoFrom = fetchAutocompleteFromCity(cityNameFrom);\n        const autoTo = fetchAutocompleteToCity(cityNameTo);\n\n        if (autoFrom === true && autoTo === true) {\n          props.onShowTable(false);\n\n          if (autocompleteFromError === false && autocompleteToError === false) {\n            setTimeout(() => {\n              setIsFindFinished(true);\n            }, 3000);\n          }\n        }\n      }\n    } catch {\n      console.log(\"Something went wrong!\");\n    }\n  };\n\n  const showBtnActionHandler = () => {\n    try {\n      searchFlixTrips();\n      props.onShowTable(true);\n      setIsFindFinished(false);\n    } catch {\n      console.log(\"Something went wrong!\");\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Form, {\n      className: classes.form_1,\n      children: [/*#__PURE__*/_jsxDEV(Row, {\n        className: \"justify-content-md-center\",\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          md: \"auto\",\n          children: /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            controlId: \"exampleForm.ControlInput1\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Travel from\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 230,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"city\" //  placeholder=\"From: city\"\n              ,\n              autoFocus: true,\n              onChange: event => {\n                setCityNameFrom(event.target.value);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 231,\n              columnNumber: 15\n            }, this), !fromCityIsValid && formIsTouched && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: classes.form_text1,\n              children: \"Please provide a valid city name.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 241,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          md: \"auto\",\n          children: /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            controlId: \"exampleForm.ControlInput1\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Travel to\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 249,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"city\" //  placeholder=\"To: city\"\n              ,\n              onChange: event => {\n                setCityNameTo(event.target.value);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 250,\n              columnNumber: 15\n            }, this), !toCityIsValid && formIsTouched && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: classes.form_text1,\n              children: \"Please provide a valid city name.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 258,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          md: \"auto\",\n          children: /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            controlId: \"exampleForm.ControlInput1\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Choose date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 266,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"date\",\n              defaultValue: todaysDate.toString,\n              onChange: event => {\n                setTripDate(event.target.value);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 267,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 265,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        className: \"justify-content-md-center\",\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          xs: true,\n          lg: \"1\",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            type: \"button\",\n            onClick: findBtnActionHandler,\n            children: \"Search\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 279,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          xs: true,\n          lg: \"1\",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"success\",\n            type: \"button\",\n            disabled: !isFindFinished,\n            onClick: showBtnActionHandler,\n            children: \"Show trips\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 284,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 7\n    }, this), fromCityError && /*#__PURE__*/_jsxDEV(Alert, {\n      variant: \"danger\",\n      children: \"Error occured while searching for city from \\\"Travel from\\\" field. Check your input and try again.\"\n    }, \"danger1\", false, {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 9\n    }, this), toCityError && /*#__PURE__*/_jsxDEV(Alert, {\n      variant: \"danger\",\n      children: \"Error occured while searching for city from \\\"Travel to\\\" field. Check your input and try again.\"\n    }, \"danger2\", false, {\n      fileName: _jsxFileName,\n      lineNumber: 302,\n      columnNumber: 9\n    }, this), autocompleteFromError && /*#__PURE__*/_jsxDEV(Alert, {\n      variant: \"danger\",\n      children: \"Cannot find any Flixbus departure from\"\n    }, \"danger3\", false, {\n      fileName: _jsxFileName,\n      lineNumber: 308,\n      columnNumber: 9\n    }, this), flixTripsError && /*#__PURE__*/_jsxDEV(Alert, {\n      variant: \"warning\",\n      children: \"Couldn't find any bus line that matches your request.\"\n    }, \"warning\", false, {\n      fileName: _jsxFileName,\n      lineNumber: 313,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 225,\n    columnNumber: 5\n  }, this);\n};\n\n_s(InputForm, \"wB1A+Rd83NlqwTDJCweYzQliKq8=\", false, function () {\n  return [useDispatch];\n});\n\n_c = InputForm;\nexport default InputForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"InputForm\");","map":{"version":3,"names":["classes","React","useState","useDispatch","fromLocationActions","toLocationActions","tripsActions","Row","Col","Container","Button","Form","Alert","InputForm","props","todaysDate","date","Date","day","getDate","month","getMonth","year","getFullYear","today","dispatch","cityNameFrom","setCityNameFrom","cityNameTo","setCityNameTo","tripDate","setTripDate","cityIdFrom","setCityIdFrom","cityIdTo","setCityIdTo","isFindFinished","setIsFindFinished","fromCityValidation","setFromCityValidation","toCityValidation","setToCityValidation","formIsTouched","setFormIsTouched","fromCityError","setFromCityError","toCityError","setToCityError","flixTripsError","setFlixTripsError","autocompleteFromError","setAutocompleteFromError","autocompleteToError","setAutocompleteToError","fromCityIsValid","trim","toCityIsValid","urlGeo","optionsGeo","method","headers","fetchFromLocationHandler","cityName","fetch","then","response","json","data","lon","Results","longitude","lat","latitude","uploadLocation","location","catch","err","console","error","fetchToLocationHandler","optionsAutocomplete","fetchAutocompleteFromCity","myResponse","city_id","city","legacy_id","fetchAutocompleteToCity","optionsSearchTrips","searchFlixTrips","num","trips","items","arr1","el","from","name","to","departure","timestamp","arrival","duration","hour","minutes","price","price_total_sum","id","push","uploadTrips","findBtnActionHandler","fetchFrom","fetchTo","autoFrom","autoTo","onShowTable","setTimeout","log","showBtnActionHandler","form_1","event","target","value","form_text1","toString"],"sources":["C:/Users/dell/Desktop/travel_app/src/components/InputForm.js"],"sourcesContent":["import classes from \"./InputForm.module.css\";\r\nimport React, { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport {\r\n  fromLocationActions,\r\n  toLocationActions,\r\n  tripsActions,\r\n} from \"../store/index\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { Row, Col, Container, Button, Form, Alert } from \"react-bootstrap\";\r\n\r\nconst InputForm = (props) => {\r\n  const todaysDate = () => {\r\n    const date = new Date();\r\n\r\n    let day = date.getDate();\r\n    let month = date.getMonth() + 1;\r\n    let year = date.getFullYear();\r\n\r\n    if (month < 10) month = \"0\" + month;\r\n    if (day < 10) day = \"0\" + day;\r\n\r\n    const today = year + \"-\" + month + \"-\" + day;\r\n\r\n    return today;\r\n  };\r\n\r\n  const dispatch = useDispatch();\r\n  const [cityNameFrom, setCityNameFrom] = useState(\"\");\r\n  const [cityNameTo, setCityNameTo] = useState(\"\");\r\n  const [tripDate, setTripDate] = useState(todaysDate());\r\n  const [cityIdFrom, setCityIdFrom] = useState();\r\n  const [cityIdTo, setCityIdTo] = useState();\r\n  const [isFindFinished, setIsFindFinished] = useState(false);\r\n\r\n  const [fromCityValidation, setFromCityValidation] = useState(false);\r\n  const [toCityValidation, setToCityValidation] = useState(false);\r\n  const [formIsTouched, setFormIsTouched] = useState(false);\r\n\r\n  const [fromCityError, setFromCityError] = useState(false);\r\n  const [toCityError, setToCityError] = useState(false);\r\n  const [flixTripsError, setFlixTripsError] = useState(false);\r\n  const [autocompleteFromError, setAutocompleteFromError] = useState(false);\r\n  const [autocompleteToError, setAutocompleteToError] = useState(false);\r\n\r\n  const fromCityIsValid = cityNameFrom.trim() !== \"\";\r\n  const toCityIsValid = cityNameTo.trim() !== \"\";\r\n\r\n  const urlGeo =\r\n    \"https://address-from-to-latitude-longitude.p.rapidapi.com/geolocationapi?address=\";\r\n  const optionsGeo = {\r\n    method: \"GET\",\r\n    headers: {\r\n      \"X-RapidAPI-Key\": \"b1ea854598mshf9e4713004ceb47p17ac51jsna4065fbbf64a\",\r\n      \"X-RapidAPI-Host\": \"address-from-to-latitude-longitude.p.rapidapi.com\",\r\n    },\r\n  };\r\n\r\n  function fetchFromLocationHandler(cityName) {\r\n    fetch(urlGeo + cityName, optionsGeo)\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        const lon = data.Results[0].longitude;\r\n        const lat = data.Results[0].latitude;\r\n        dispatch(fromLocationActions.uploadLocation({ location: [lat, lon] }));\r\n        setFromCityError(false);\r\n        return true;\r\n      })\r\n      .catch((err) => {\r\n        console.error(err);\r\n        setFromCityError(true);\r\n        return false;\r\n      });\r\n  }\r\n\r\n  function fetchToLocationHandler(cityName) {\r\n    fetch(urlGeo + cityName, optionsGeo)\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        const lon = data.Results[0].longitude;\r\n        const lat = data.Results[0].latitude;\r\n        dispatch(toLocationActions.uploadLocation({ location: [lat, lon] }));\r\n        setToCityError(false);\r\n        return true;\r\n      })\r\n      .catch((err) => {\r\n        console.error(err);\r\n        setToCityError(true);\r\n        return false;\r\n      });\r\n  }\r\n\r\n  const optionsAutocomplete = {\r\n    method: \"GET\",\r\n    headers: {\r\n      \"X-RapidAPI-Key\": \"b1ea854598mshf9e4713004ceb47p17ac51jsna4065fbbf64a\",\r\n      \"X-RapidAPI-Host\": \"flixbus2.p.rapidapi.com\",\r\n    },\r\n  };\r\n\r\n  const fetchAutocompleteFromCity = (cityName) => {\r\n    const myResponse = fetch(\r\n      `https://flixbus2.p.rapidapi.com/autocomplete?query=${cityName}`,\r\n      optionsAutocomplete\r\n    )\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        const city_id = data[0].city.legacy_id;\r\n\r\n        setCityIdFrom(city_id);\r\n        setAutocompleteFromError(false);\r\n        return true;\r\n      })\r\n      .catch((err) => {\r\n        console.error(err);\r\n        setAutocompleteFromError(true);\r\n        return false;\r\n      });\r\n    return myResponse;\r\n  };\r\n\r\n  const fetchAutocompleteToCity = (cityName) => {\r\n    fetch(\r\n      `https://flixbus2.p.rapidapi.com/autocomplete?query=${cityName}`,\r\n      optionsAutocomplete\r\n    )\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        const city_id = data[0].city.legacy_id;\r\n        setCityIdTo(city_id);\r\n        setAutocompleteToError(false);\r\n        return true;\r\n      })\r\n      .catch((err) => {\r\n        console.error(err);\r\n        setAutocompleteToError(true);\r\n        return false;\r\n      });\r\n  };\r\n\r\n  const optionsSearchTrips = {\r\n    method: \"GET\",\r\n    headers: {\r\n      \"X-RapidAPI-Key\": \"b1ea854598mshf9e4713004ceb47p17ac51jsna4065fbbf64a\",\r\n      \"X-RapidAPI-Host\": \"flixbus.p.rapidapi.com\",\r\n    },\r\n  };\r\n\r\n  const searchFlixTrips = () => {\r\n    fetch(\r\n      `https://flixbus.p.rapidapi.com/v1/search-trips?to_id=${cityIdTo}&from_id=${cityIdFrom}&currency=EUR&departure_date=${tripDate}&number_adult=1&search_by=cities`,\r\n      optionsSearchTrips\r\n    )\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        let num = 0;\r\n        const trips = data[0].items;\r\n        const arr1 = [];\r\n        for (const el of trips) {\r\n          const from = data[0].from.name;\r\n          const to = data[0].to.name;\r\n          const departure = el.departure.timestamp;\r\n          const arrival = el.arrival.timestamp;\r\n          const duration = el.duration.hour + \":\" + el.duration.minutes;\r\n          const price = el.price_total_sum;\r\n          num = num + 1;\r\n          const id = num;\r\n          arr1.push({\r\n            id: id,\r\n            from: from,\r\n            to: to,\r\n            departure: departure,\r\n            arrival: arrival,\r\n            duration: duration,\r\n            price: price,\r\n          });\r\n        }\r\n        dispatch(tripsActions.uploadTrips({ trips: arr1 }));\r\n        setFlixTripsError(false);\r\n      })\r\n      .catch((err) => {\r\n        console.error(err);\r\n        setFlixTripsError(true);\r\n      });\r\n  };\r\n\r\n  const findBtnActionHandler = () => {\r\n    try {\r\n      setFormIsTouched(true);\r\n\r\n      const fetchFrom = fetchFromLocationHandler(cityNameFrom);\r\n      const fetchTo = fetchToLocationHandler(cityNameTo);\r\n\r\n      if (fetchFrom === true && fetchTo === true) {\r\n        const autoFrom = fetchAutocompleteFromCity(cityNameFrom);\r\n        const autoTo = fetchAutocompleteToCity(cityNameTo);\r\n        if (autoFrom === true && autoTo === true) {\r\n          props.onShowTable(false);\r\n          if (\r\n            autocompleteFromError === false &&\r\n            autocompleteToError === false\r\n          ) {\r\n            setTimeout(() => {\r\n              setIsFindFinished(true);\r\n            }, 3000);\r\n          }\r\n        }\r\n      }\r\n    } catch {\r\n      console.log(\"Something went wrong!\");\r\n    }\r\n  };\r\n\r\n  const showBtnActionHandler = () => {\r\n    try {\r\n      searchFlixTrips();\r\n      props.onShowTable(true);\r\n      setIsFindFinished(false);\r\n    } catch {\r\n      console.log(\"Something went wrong!\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Form className={classes.form_1}>\r\n        <Row className=\"justify-content-md-center\">\r\n          <Col md=\"auto\">\r\n            <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlInput1\">\r\n              <Form.Label>Travel from</Form.Label>\r\n              <Form.Control\r\n                type=\"city\"\r\n                //  placeholder=\"From: city\"\r\n                autoFocus\r\n                onChange={(event) => {\r\n                  setCityNameFrom(event.target.value);\r\n                }}\r\n              />\r\n\r\n              {!fromCityIsValid && formIsTouched && (\r\n                <p className={classes.form_text1}>\r\n                  Please provide a valid city name.\r\n                </p>\r\n              )}\r\n            </Form.Group>\r\n          </Col>\r\n          <Col md=\"auto\">\r\n            <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlInput1\">\r\n              <Form.Label>Travel to</Form.Label>\r\n              <Form.Control\r\n                type=\"city\"\r\n                //  placeholder=\"To: city\"\r\n                onChange={(event) => {\r\n                  setCityNameTo(event.target.value);\r\n                }}\r\n              />\r\n              {!toCityIsValid && formIsTouched && (\r\n                <p className={classes.form_text1}>\r\n                  Please provide a valid city name.\r\n                </p>\r\n              )}\r\n            </Form.Group>\r\n          </Col>\r\n          <Col md=\"auto\">\r\n            <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlInput1\">\r\n              <Form.Label>Choose date</Form.Label>\r\n              <Form.Control\r\n                type=\"date\"\r\n                defaultValue={todaysDate.toString}\r\n                onChange={(event) => {\r\n                  setTripDate(event.target.value);\r\n                }}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n          </Col>\r\n        </Row>\r\n        <Row className=\"justify-content-md-center\">\r\n          <Col xs lg=\"1\">\r\n            <Button type=\"button\" onClick={findBtnActionHandler}>\r\n              Search\r\n            </Button>\r\n          </Col>\r\n          <Col xs lg=\"1\">\r\n            <Button\r\n              variant=\"success\"\r\n              type=\"button\"\r\n              disabled={!isFindFinished}\r\n              onClick={showBtnActionHandler}\r\n            >\r\n              Show trips\r\n            </Button>\r\n          </Col>\r\n        </Row>\r\n      </Form>\r\n      {fromCityError && (\r\n        <Alert key=\"danger1\" variant=\"danger\">\r\n          Error occured while searching for city from \"Travel from\" field. Check\r\n          your input and try again.\r\n        </Alert>\r\n      )}\r\n      {toCityError && (\r\n        <Alert key=\"danger2\" variant=\"danger\">\r\n          Error occured while searching for city from \"Travel to\" field. Check\r\n          your input and try again.\r\n        </Alert>\r\n      )}\r\n      {autocompleteFromError && (\r\n        <Alert key=\"danger3\" variant=\"danger\">\r\n          Cannot find any Flixbus departure from\r\n        </Alert>\r\n      )}\r\n      {flixTripsError && (\r\n        <Alert key=\"warning\" variant=\"warning\">\r\n          Couldn't find any bus line that matches your request.\r\n        </Alert>\r\n      )}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default InputForm;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}