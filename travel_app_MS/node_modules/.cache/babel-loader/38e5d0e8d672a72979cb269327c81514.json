{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dell\\\\Desktop\\\\travel_app\\\\src\\\\components\\\\InputForm.js\",\n    _s = $RefreshSig$();\n\nimport classes from \"./InputForm.module.css\";\nimport React, { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { fromLocationActions, toLocationActions, tripsActions } from \"../store/index\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { Row, Col, Container, Button, Form, Alert } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst InputForm = props => {\n  _s();\n\n  const todaysDate = () => {\n    const date = new Date();\n    let day = date.getDate();\n    let month = date.getMonth() + 1;\n    let year = date.getFullYear();\n    if (month < 10) month = \"0\" + month;\n    if (day < 10) day = \"0\" + day;\n    const today = year + \"-\" + month + \"-\" + day;\n    return today;\n  };\n\n  const dispatch = useDispatch();\n  const [cityNameFrom, setCityNameFrom] = useState(\"\");\n  const [cityNameTo, setCityNameTo] = useState(\"\");\n  const [tripDate, setTripDate] = useState(todaysDate());\n  const [cityIdFrom, setCityIdFrom] = useState();\n  const [cityIdTo, setCityIdTo] = useState();\n  const [isFindFinished, setIsFindFinished] = useState(false);\n  const [fromCityValidation, setFromCityValidation] = useState(false);\n  const [toCityValidation, setToCityValidation] = useState(false);\n  const [formIsTouched, setFormIsTouched] = useState(false);\n  const [fromCityError, setFromCityError] = useState(false);\n  const [toCityError, setToCityError] = useState(false);\n  const fromCityIsValid = cityNameFrom.trim() !== \"\";\n  const toCityIsValid = cityNameTo.trim() !== \"\";\n  const optionsGeocoding = {\n    method: \"GET\",\n    headers: {\n      \"X-Api-Key\": \"w/ji57sNSaUz/bxWAIxJ3A==UmFkltyZkWVv9tvU\"\n    }\n  };\n\n  function fetchFromLocationHandler(cityName) {\n    fetch(`https://api.api-ninjas.com/v1/geocoding?city=${cityName}`, optionsGeocoding).then(response => response.json()).then(data => {\n      console.log(data[0].latitude + \" i \" + data[0].longitude + \" from lokacija !\");\n      const lon = data[0].longitude;\n      const lat = data[0].latitude;\n      dispatch(fromLocationActions.uploadLocation({\n        location: [lat, lon]\n      }));\n      setFromCityError(false);\n      return [lat, lon];\n    }).catch(err => {\n      console.error(err);\n      setFromCityError(true);\n    });\n  }\n\n  function fetchToLocationHandler(cityName) {\n    fetch(`https://api.api-ninjas.com/v1/geocoding?city=${cityName}`, optionsGeocoding).then(response => response.json()).then(data => {\n      console.log(data[0].latitude + \" i \" + data[0].longitude + \" to lokacija !\");\n      const lon = data[0].longitude;\n      const lat = data[0].latitude;\n      dispatch(toLocationActions.uploadLocation({\n        location: [lat, lon]\n      }));\n      return [lat, lon];\n    }).catch(err => {\n      console.error(err);\n    });\n  }\n\n  const optionsAutocomplete = {\n    method: \"GET\",\n    headers: {\n      \"X-RapidAPI-Key\": \"b1ea854598mshf9e4713004ceb47p17ac51jsna4065fbbf64a\",\n      \"X-RapidAPI-Host\": \"flixbus2.p.rapidapi.com\"\n    }\n  };\n\n  const fetchAutocompleteFromCity = cityName => {\n    const myResponse = fetch(`https://flixbus2.p.rapidapi.com/autocomplete?query=${cityName}`, optionsAutocomplete).then(response => response.json()).then(data => {\n      const city_id = data[0].city.legacy_id;\n      setCityIdFrom(city_id);\n    }).catch(err => {\n      console.error(err);\n    });\n    return myResponse;\n  };\n\n  const fetchAutocompleteToCity = cityName => {\n    fetch(`https://flixbus2.p.rapidapi.com/autocomplete?query=${cityName}`, optionsAutocomplete).then(response => response.json()).then(data => {\n      const city_id = data[0].city.legacy_id;\n      setCityIdTo(city_id);\n    }).catch(err => {\n      console.error(err);\n      setToCityError(true);\n    });\n  };\n\n  const optionsSearchTrips = {\n    method: \"GET\",\n    headers: {\n      \"X-RapidAPI-Key\": \"b1ea854598mshf9e4713004ceb47p17ac51jsna4065fbbf64a\",\n      \"X-RapidAPI-Host\": \"flixbus.p.rapidapi.com\"\n    }\n  };\n\n  const searchFlixTrips = () => {\n    fetch(`https://flixbus.p.rapidapi.com/v1/search-trips?to_id=${cityIdTo}&from_id=${cityIdFrom}&currency=EUR&departure_date=${tripDate}&number_adult=1&search_by=cities`, optionsSearchTrips).then(response => response.json()).then(data => {\n      let num = 0;\n      const trips = data[0].items;\n      const arr1 = [];\n\n      for (const el of trips) {\n        const from = data[0].from.name;\n        const to = data[0].to.name;\n        const departure = el.departure.timestamp;\n        const arrival = el.arrival.timestamp;\n        const duration = el.duration.hour + \":\" + el.duration.minutes;\n        const price = el.price_total_sum;\n        num = num + 1;\n        const id = num;\n        arr1.push({\n          id: id,\n          from: from,\n          to: to,\n          departure: departure,\n          arrival: arrival,\n          duration: duration,\n          price: price\n        });\n      }\n\n      dispatch(tripsActions.uploadTrips({\n        trips: arr1\n      }));\n    }).catch(err => console.error(err));\n  };\n\n  const findBtnActionHandler = () => {\n    try {\n      setFormIsTouched(true);\n      fetchFromLocationHandler(cityNameFrom);\n      fetchToLocationHandler(cityNameTo);\n      fetchAutocompleteFromCity(cityNameFrom);\n      fetchAutocompleteToCity(cityNameTo);\n      props.onShowTable(false);\n      setTimeout(() => {\n        setIsFindFinished(true);\n      }, 3000);\n    } catch {\n      console.log(\"Something went wrong!\");\n    }\n  };\n\n  const showBtnActionHandler = () => {\n    try {\n      searchFlixTrips();\n      props.onShowTable(true);\n      setIsFindFinished(false);\n    } catch {\n      console.log(\"Something went wrong!\");\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Form, {\n      className: classes.form_1,\n      children: [/*#__PURE__*/_jsxDEV(Row, {\n        className: \"justify-content-md-center\",\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          md: \"auto\",\n          children: /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            controlId: \"exampleForm.ControlInput1\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Travel from\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 212,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"city\" //  placeholder=\"From: city\"\n              ,\n              autoFocus: true,\n              onChange: event => {\n                setCityNameFrom(event.target.value);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 213,\n              columnNumber: 15\n            }, this), !fromCityIsValid && formIsTouched && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: classes.form_text1,\n              children: \"Please provide a valid city name.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 223,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          md: \"auto\",\n          children: /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            controlId: \"exampleForm.ControlInput1\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Travel to\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 231,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"city\" //  placeholder=\"To: city\"\n              ,\n              onChange: event => {\n                setCityNameTo(event.target.value);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 232,\n              columnNumber: 15\n            }, this), !toCityIsValid && formIsTouched && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: classes.form_text1,\n              children: \"Please provide a valid city name.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 240,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          md: \"auto\",\n          children: /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            controlId: \"exampleForm.ControlInput1\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Choose date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 248,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"date\",\n              defaultValue: todaysDate.toString,\n              onChange: event => {\n                setTripDate(event.target.value);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 249,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 247,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        className: \"justify-content-md-center\",\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          xs: true,\n          lg: \"1\",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            type: \"button\",\n            onClick: findBtnActionHandler,\n            children: \"Search\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 261,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          xs: true,\n          lg: \"1\",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"success\",\n            type: \"button\",\n            disabled: !isFindFinished,\n            onClick: showBtnActionHandler,\n            children: \"Show trips\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 266,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 7\n    }, this), fromCityError && /*#__PURE__*/_jsxDEV(Alert, {\n      variant: \"danger\",\n      children: \"Error occured while searching for city from \\\"Travel from\\\" field. Check your input and try again.\"\n    }, \"danger\", false, {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 9\n    }, this), toCityError && /*#__PURE__*/_jsxDEV(Alert, {\n      variant: \"danger\",\n      children: \"Error occured while searching for city from \\\"Travel to\\\" field. Check your input and try again.\"\n    }, \"danger\", false, {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 207,\n    columnNumber: 5\n  }, this);\n};\n\n_s(InputForm, \"HXYK6XLbTtwE6jo++D2nR6qUZPg=\", false, function () {\n  return [useDispatch];\n});\n\n_c = InputForm;\nexport default InputForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"InputForm\");","map":{"version":3,"names":["classes","React","useState","useDispatch","fromLocationActions","toLocationActions","tripsActions","Row","Col","Container","Button","Form","Alert","InputForm","props","todaysDate","date","Date","day","getDate","month","getMonth","year","getFullYear","today","dispatch","cityNameFrom","setCityNameFrom","cityNameTo","setCityNameTo","tripDate","setTripDate","cityIdFrom","setCityIdFrom","cityIdTo","setCityIdTo","isFindFinished","setIsFindFinished","fromCityValidation","setFromCityValidation","toCityValidation","setToCityValidation","formIsTouched","setFormIsTouched","fromCityError","setFromCityError","toCityError","setToCityError","fromCityIsValid","trim","toCityIsValid","optionsGeocoding","method","headers","fetchFromLocationHandler","cityName","fetch","then","response","json","data","console","log","latitude","longitude","lon","lat","uploadLocation","location","catch","err","error","fetchToLocationHandler","optionsAutocomplete","fetchAutocompleteFromCity","myResponse","city_id","city","legacy_id","fetchAutocompleteToCity","optionsSearchTrips","searchFlixTrips","num","trips","items","arr1","el","from","name","to","departure","timestamp","arrival","duration","hour","minutes","price","price_total_sum","id","push","uploadTrips","findBtnActionHandler","onShowTable","setTimeout","showBtnActionHandler","form_1","event","target","value","form_text1","toString"],"sources":["C:/Users/dell/Desktop/travel_app/src/components/InputForm.js"],"sourcesContent":["import classes from \"./InputForm.module.css\";\r\nimport React, { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport {\r\n  fromLocationActions,\r\n  toLocationActions,\r\n  tripsActions,\r\n} from \"../store/index\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { Row, Col, Container, Button, Form, Alert } from \"react-bootstrap\";\r\n\r\nconst InputForm = (props) => {\r\n  const todaysDate = () => {\r\n    const date = new Date();\r\n\r\n    let day = date.getDate();\r\n    let month = date.getMonth() + 1;\r\n    let year = date.getFullYear();\r\n\r\n    if (month < 10) month = \"0\" + month;\r\n    if (day < 10) day = \"0\" + day;\r\n\r\n    const today = year + \"-\" + month + \"-\" + day;\r\n\r\n    return today;\r\n  };\r\n\r\n  const dispatch = useDispatch();\r\n  const [cityNameFrom, setCityNameFrom] = useState(\"\");\r\n  const [cityNameTo, setCityNameTo] = useState(\"\");\r\n  const [tripDate, setTripDate] = useState(todaysDate());\r\n  const [cityIdFrom, setCityIdFrom] = useState();\r\n  const [cityIdTo, setCityIdTo] = useState();\r\n  const [isFindFinished, setIsFindFinished] = useState(false);\r\n\r\n  const [fromCityValidation, setFromCityValidation] = useState(false);\r\n  const [toCityValidation, setToCityValidation] = useState(false);\r\n  const [formIsTouched, setFormIsTouched] = useState(false);\r\n\r\n  const [fromCityError, setFromCityError] = useState(false);\r\n  const [toCityError, setToCityError] = useState(false);\r\n\r\n  const fromCityIsValid = cityNameFrom.trim() !== \"\";\r\n  const toCityIsValid = cityNameTo.trim() !== \"\";\r\n\r\n  const optionsGeocoding = {\r\n    method: \"GET\",\r\n    headers: {\r\n      \"X-Api-Key\": \"w/ji57sNSaUz/bxWAIxJ3A==UmFkltyZkWVv9tvU\",\r\n    },\r\n  };\r\n\r\n  function fetchFromLocationHandler(cityName) {\r\n    fetch(\r\n      `https://api.api-ninjas.com/v1/geocoding?city=${cityName}`,\r\n      optionsGeocoding\r\n    )\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        console.log(\r\n          data[0].latitude + \" i \" + data[0].longitude + \" from lokacija !\"\r\n        );\r\n        const lon = data[0].longitude;\r\n        const lat = data[0].latitude;\r\n        dispatch(fromLocationActions.uploadLocation({ location: [lat, lon] }));\r\n        setFromCityError(false);\r\n        return [lat, lon];\r\n      })\r\n      .catch((err) => {\r\n        console.error(err);\r\n        setFromCityError(true);\r\n      });\r\n  }\r\n\r\n  function fetchToLocationHandler(cityName) {\r\n    fetch(\r\n      `https://api.api-ninjas.com/v1/geocoding?city=${cityName}`,\r\n      optionsGeocoding\r\n    )\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        console.log(\r\n          data[0].latitude + \" i \" + data[0].longitude + \" to lokacija !\"\r\n        );\r\n        const lon = data[0].longitude;\r\n        const lat = data[0].latitude;\r\n        dispatch(toLocationActions.uploadLocation({ location: [lat, lon] }));\r\n\r\n        return [lat, lon];\r\n      })\r\n      .catch((err) => {\r\n        console.error(err);\r\n      });\r\n  }\r\n\r\n  const optionsAutocomplete = {\r\n    method: \"GET\",\r\n    headers: {\r\n      \"X-RapidAPI-Key\": \"b1ea854598mshf9e4713004ceb47p17ac51jsna4065fbbf64a\",\r\n      \"X-RapidAPI-Host\": \"flixbus2.p.rapidapi.com\",\r\n    },\r\n  };\r\n\r\n  const fetchAutocompleteFromCity = (cityName) => {\r\n    const myResponse = fetch(\r\n      `https://flixbus2.p.rapidapi.com/autocomplete?query=${cityName}`,\r\n      optionsAutocomplete\r\n    )\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        const city_id = data[0].city.legacy_id;\r\n\r\n        setCityIdFrom(city_id);\r\n      })\r\n      .catch((err) => {\r\n        console.error(err);\r\n      });\r\n    return myResponse;\r\n  };\r\n\r\n  const fetchAutocompleteToCity = (cityName) => {\r\n    fetch(\r\n      `https://flixbus2.p.rapidapi.com/autocomplete?query=${cityName}`,\r\n      optionsAutocomplete\r\n    )\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        const city_id = data[0].city.legacy_id;\r\n        setCityIdTo(city_id);\r\n      })\r\n      .catch((err) => {\r\n        console.error(err);\r\n        setToCityError(true);\r\n      });\r\n  };\r\n\r\n  const optionsSearchTrips = {\r\n    method: \"GET\",\r\n    headers: {\r\n      \"X-RapidAPI-Key\": \"b1ea854598mshf9e4713004ceb47p17ac51jsna4065fbbf64a\",\r\n      \"X-RapidAPI-Host\": \"flixbus.p.rapidapi.com\",\r\n    },\r\n  };\r\n\r\n  const searchFlixTrips = () => {\r\n    fetch(\r\n      `https://flixbus.p.rapidapi.com/v1/search-trips?to_id=${cityIdTo}&from_id=${cityIdFrom}&currency=EUR&departure_date=${tripDate}&number_adult=1&search_by=cities`,\r\n      optionsSearchTrips\r\n    )\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        let num = 0;\r\n        const trips = data[0].items;\r\n        const arr1 = [];\r\n        for (const el of trips) {\r\n          const from = data[0].from.name;\r\n          const to = data[0].to.name;\r\n          const departure = el.departure.timestamp;\r\n          const arrival = el.arrival.timestamp;\r\n          const duration = el.duration.hour + \":\" + el.duration.minutes;\r\n          const price = el.price_total_sum;\r\n          num = num + 1;\r\n          const id = num;\r\n          arr1.push({\r\n            id: id,\r\n            from: from,\r\n            to: to,\r\n            departure: departure,\r\n            arrival: arrival,\r\n            duration: duration,\r\n            price: price,\r\n          });\r\n        }\r\n        dispatch(tripsActions.uploadTrips({ trips: arr1 }));\r\n      })\r\n      .catch((err) => console.error(err));\r\n  };\r\n\r\n  const findBtnActionHandler = () => {\r\n    try {\r\n      setFormIsTouched(true);\r\n      fetchFromLocationHandler(cityNameFrom);\r\n      fetchToLocationHandler(cityNameTo);\r\n\r\n      fetchAutocompleteFromCity(cityNameFrom);\r\n      fetchAutocompleteToCity(cityNameTo);\r\n      props.onShowTable(false);\r\n      setTimeout(() => {\r\n        setIsFindFinished(true);\r\n      }, 3000);\r\n    } catch {\r\n      console.log(\"Something went wrong!\");\r\n    }\r\n  };\r\n\r\n  const showBtnActionHandler = () => {\r\n    try {\r\n      searchFlixTrips();\r\n      props.onShowTable(true);\r\n      setIsFindFinished(false);\r\n    } catch {\r\n      console.log(\"Something went wrong!\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Form className={classes.form_1}>\r\n        <Row className=\"justify-content-md-center\">\r\n          <Col md=\"auto\">\r\n            <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlInput1\">\r\n              <Form.Label>Travel from</Form.Label>\r\n              <Form.Control\r\n                type=\"city\"\r\n                //  placeholder=\"From: city\"\r\n                autoFocus\r\n                onChange={(event) => {\r\n                  setCityNameFrom(event.target.value);\r\n                }}\r\n              />\r\n\r\n              {!fromCityIsValid && formIsTouched && (\r\n                <p className={classes.form_text1}>\r\n                  Please provide a valid city name.\r\n                </p>\r\n              )}\r\n            </Form.Group>\r\n          </Col>\r\n          <Col md=\"auto\">\r\n            <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlInput1\">\r\n              <Form.Label>Travel to</Form.Label>\r\n              <Form.Control\r\n                type=\"city\"\r\n                //  placeholder=\"To: city\"\r\n                onChange={(event) => {\r\n                  setCityNameTo(event.target.value);\r\n                }}\r\n              />\r\n              {!toCityIsValid && formIsTouched && (\r\n                <p className={classes.form_text1}>\r\n                  Please provide a valid city name.\r\n                </p>\r\n              )}\r\n            </Form.Group>\r\n          </Col>\r\n          <Col md=\"auto\">\r\n            <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlInput1\">\r\n              <Form.Label>Choose date</Form.Label>\r\n              <Form.Control\r\n                type=\"date\"\r\n                defaultValue={todaysDate.toString}\r\n                onChange={(event) => {\r\n                  setTripDate(event.target.value);\r\n                }}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n          </Col>\r\n        </Row>\r\n        <Row className=\"justify-content-md-center\">\r\n          <Col xs lg=\"1\">\r\n            <Button type=\"button\" onClick={findBtnActionHandler}>\r\n              Search\r\n            </Button>\r\n          </Col>\r\n          <Col xs lg=\"1\">\r\n            <Button\r\n              variant=\"success\"\r\n              type=\"button\"\r\n              disabled={!isFindFinished}\r\n              onClick={showBtnActionHandler}\r\n            >\r\n              Show trips\r\n            </Button>\r\n          </Col>\r\n        </Row>\r\n      </Form>\r\n      {fromCityError && (\r\n        <Alert key=\"danger\" variant=\"danger\">\r\n          Error occured while searching for city from \"Travel from\" field. Check\r\n          your input and try again.\r\n        </Alert>\r\n      )}\r\n      {toCityError && (\r\n        <Alert key=\"danger\" variant=\"danger\">\r\n          Error occured while searching for city from \"Travel to\" field. Check\r\n          your input and try again.\r\n        </Alert>\r\n      )}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default InputForm;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}