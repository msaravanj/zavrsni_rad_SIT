{"ast":null,"code":"import { createSlice, configureStore } from \"@reduxjs/toolkit\";\nconst fromState = {\n  fromLocation: null,\n  isFromChanged: false,\n  fromId: null\n};\nconst toState = {\n  toLocation: null,\n  isToChanged: false,\n  toId: null\n};\nconst tripsSlice = createSlice({\n  name: \"trips\",\n  initialState: tripsState,\n  reducers: {\n    uploadTrips(state, action) {\n      state.trips = action.payload.trips;\n    }\n\n  }\n});\nconst fromSlice = createSlice({\n  name: \"fromLocation\",\n  initialState: fromState,\n  reducers: {\n    uploadLocation(state, action) {\n      state.fromLocation = action.payload.location;\n      state.isFromChanged = true;\n    },\n\n    uploadCityId(state, action) {\n      state.fromId = action.payload.id;\n    }\n\n  }\n});\nconst toSlice = createSlice({\n  name: \"toLocation\",\n  initialState: toState,\n  reducers: {\n    uploadLocation(state, action) {\n      state.toLocation = action.payload.location;\n      state.isToChanged = true;\n    },\n\n    uploadCityId(state, action) {\n      state.toId = action.payload.id;\n    }\n\n  }\n});\nconst store = configureStore({\n  reducer: {\n    fromLoc: fromSlice.reducer,\n    toLoc: toSlice.reducer,\n    trips: tripsSlice.reducer\n  }\n});\nexport const toLocationActions = toSlice.actions;\nexport const fromLocationActions = fromSlice.actions;\nexport const fromCoordinates = fromSlice.getInitialState.location;\nexport const toCoordinates = toSlice.getInitialState.location;\nexport const fromId = fromSlice.getInitialState.id;\nexport const toId = toSlice.getInitialState.id;\nexport const tripsActions = tripsSlice.actions;\nexport default store;","map":{"version":3,"names":["createSlice","configureStore","fromState","fromLocation","isFromChanged","fromId","toState","toLocation","isToChanged","toId","tripsSlice","name","initialState","tripsState","reducers","uploadTrips","state","action","trips","payload","fromSlice","uploadLocation","location","uploadCityId","id","toSlice","store","reducer","fromLoc","toLoc","toLocationActions","actions","fromLocationActions","fromCoordinates","getInitialState","toCoordinates","tripsActions"],"sources":["C:/Users/dell/Desktop/travel_app/src/store/index.js"],"sourcesContent":["import { createSlice, configureStore } from \"@reduxjs/toolkit\";\r\n\r\nconst fromState = {\r\n  fromLocation: null,\r\n  isFromChanged: false,\r\n  fromId: null,\r\n};\r\n\r\nconst toState = {\r\n  toLocation: null,\r\n  isToChanged: false,\r\n  toId: null,\r\n};\r\n\r\nconst tripsSlice = createSlice({\r\n  name: \"trips\",\r\n  initialState: tripsState,\r\n  reducers: {\r\n    uploadTrips(state, action) {\r\n      state.trips = action.payload.trips;\r\n    },\r\n  },\r\n});\r\n\r\nconst fromSlice = createSlice({\r\n  name: \"fromLocation\",\r\n  initialState: fromState,\r\n  reducers: {\r\n    uploadLocation(state, action) {\r\n      state.fromLocation = action.payload.location;\r\n      state.isFromChanged = true;\r\n    },\r\n    uploadCityId(state, action) {\r\n      state.fromId = action.payload.id;\r\n    },\r\n  },\r\n});\r\n\r\nconst toSlice = createSlice({\r\n  name: \"toLocation\",\r\n  initialState: toState,\r\n  reducers: {\r\n    uploadLocation(state, action) {\r\n      state.toLocation = action.payload.location;\r\n      state.isToChanged = true;\r\n    },\r\n    uploadCityId(state, action) {\r\n      state.toId = action.payload.id;\r\n    },\r\n  },\r\n});\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    fromLoc: fromSlice.reducer,\r\n    toLoc: toSlice.reducer,\r\n    trips: tripsSlice.reducer,\r\n  },\r\n});\r\n\r\nexport const toLocationActions = toSlice.actions;\r\nexport const fromLocationActions = fromSlice.actions;\r\nexport const fromCoordinates = fromSlice.getInitialState.location;\r\nexport const toCoordinates = toSlice.getInitialState.location;\r\nexport const fromId = fromSlice.getInitialState.id;\r\nexport const toId = toSlice.getInitialState.id;\r\nexport const tripsActions = tripsSlice.actions;\r\nexport default store;\r\n"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,cAAtB,QAA4C,kBAA5C;AAEA,MAAMC,SAAS,GAAG;EAChBC,YAAY,EAAE,IADE;EAEhBC,aAAa,EAAE,KAFC;EAGhBC,MAAM,EAAE;AAHQ,CAAlB;AAMA,MAAMC,OAAO,GAAG;EACdC,UAAU,EAAE,IADE;EAEdC,WAAW,EAAE,KAFC;EAGdC,IAAI,EAAE;AAHQ,CAAhB;AAMA,MAAMC,UAAU,GAAGV,WAAW,CAAC;EAC7BW,IAAI,EAAE,OADuB;EAE7BC,YAAY,EAAEC,UAFe;EAG7BC,QAAQ,EAAE;IACRC,WAAW,CAACC,KAAD,EAAQC,MAAR,EAAgB;MACzBD,KAAK,CAACE,KAAN,GAAcD,MAAM,CAACE,OAAP,CAAeD,KAA7B;IACD;;EAHO;AAHmB,CAAD,CAA9B;AAUA,MAAME,SAAS,GAAGpB,WAAW,CAAC;EAC5BW,IAAI,EAAE,cADsB;EAE5BC,YAAY,EAAEV,SAFc;EAG5BY,QAAQ,EAAE;IACRO,cAAc,CAACL,KAAD,EAAQC,MAAR,EAAgB;MAC5BD,KAAK,CAACb,YAAN,GAAqBc,MAAM,CAACE,OAAP,CAAeG,QAApC;MACAN,KAAK,CAACZ,aAAN,GAAsB,IAAtB;IACD,CAJO;;IAKRmB,YAAY,CAACP,KAAD,EAAQC,MAAR,EAAgB;MAC1BD,KAAK,CAACX,MAAN,GAAeY,MAAM,CAACE,OAAP,CAAeK,EAA9B;IACD;;EAPO;AAHkB,CAAD,CAA7B;AAcA,MAAMC,OAAO,GAAGzB,WAAW,CAAC;EAC1BW,IAAI,EAAE,YADoB;EAE1BC,YAAY,EAAEN,OAFY;EAG1BQ,QAAQ,EAAE;IACRO,cAAc,CAACL,KAAD,EAAQC,MAAR,EAAgB;MAC5BD,KAAK,CAACT,UAAN,GAAmBU,MAAM,CAACE,OAAP,CAAeG,QAAlC;MACAN,KAAK,CAACR,WAAN,GAAoB,IAApB;IACD,CAJO;;IAKRe,YAAY,CAACP,KAAD,EAAQC,MAAR,EAAgB;MAC1BD,KAAK,CAACP,IAAN,GAAaQ,MAAM,CAACE,OAAP,CAAeK,EAA5B;IACD;;EAPO;AAHgB,CAAD,CAA3B;AAcA,MAAME,KAAK,GAAGzB,cAAc,CAAC;EAC3B0B,OAAO,EAAE;IACPC,OAAO,EAAER,SAAS,CAACO,OADZ;IAEPE,KAAK,EAAEJ,OAAO,CAACE,OAFR;IAGPT,KAAK,EAAER,UAAU,CAACiB;EAHX;AADkB,CAAD,CAA5B;AAQA,OAAO,MAAMG,iBAAiB,GAAGL,OAAO,CAACM,OAAlC;AACP,OAAO,MAAMC,mBAAmB,GAAGZ,SAAS,CAACW,OAAtC;AACP,OAAO,MAAME,eAAe,GAAGb,SAAS,CAACc,eAAV,CAA0BZ,QAAlD;AACP,OAAO,MAAMa,aAAa,GAAGV,OAAO,CAACS,eAAR,CAAwBZ,QAA9C;AACP,OAAO,MAAMjB,MAAM,GAAGe,SAAS,CAACc,eAAV,CAA0BV,EAAzC;AACP,OAAO,MAAMf,IAAI,GAAGgB,OAAO,CAACS,eAAR,CAAwBV,EAArC;AACP,OAAO,MAAMY,YAAY,GAAG1B,UAAU,CAACqB,OAAhC;AACP,eAAeL,KAAf"},"metadata":{},"sourceType":"module"}