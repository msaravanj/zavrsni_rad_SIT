{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dell\\\\Desktop\\\\travel_app\\\\src\\\\components\\\\InputForm.js\",\n    _s = $RefreshSig$();\n\nimport classes from \"./InputForm.module.css\";\nimport React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { fromLocationActions } from \"../store/index\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst InputForm = () => {\n  _s();\n\n  const todaysDate = () => {\n    const date = new Date();\n    let day = date.getDate();\n    let month = date.getMonth() + 1;\n    let year = date.getFullYear();\n    if (month < 10) month = \"0\" + month;\n    if (day < 10) day = \"0\" + day;\n    const today = year + \"-\" + month + \"-\" + day;\n    return today;\n  };\n\n  const dispatch = useDispatch();\n  const [cityNameFrom, setCityNameFrom] = useState(\"\");\n  const [cityNameTo, setCityNameTo] = useState(\"\");\n  const [fromApiLocation, setFromApiLocation] = useState({});\n  const [toApiLocation, setToApiLocation] = useState({});\n  const options = {\n    method: \"GET\",\n    headers: {\n      \"X-Api-Key\": \"w/ji57sNSaUz/bxWAIxJ3A==UmFkltyZkWVv9tvU\"\n    }\n  };\n\n  function fetchLocationHandler(cityName) {\n    fetch(`https://api.api-ninjas.com/v1/city?name=${cityName}`, options).then(response => response.json()).then(data => {\n      console.log(data[0].longitude + \" i \" + data[0].latitude + \" lokacija !\");\n      const lon = data[0].longitude;\n      const lat = data[0].latitude;\n      dispatch(fromLocationActions.uploadLocation);\n      return {\n        lon,\n        lat\n      };\n    }).catch(err => console.error(err));\n  }\n\n  const btnActionHandler = () => {\n    const fromLocation = fetchLocationHandler(cityNameFrom);\n    const toLocation = fetchLocationHandler(cityNameTo);\n    setFromApiLocation(fromLocation);\n    setToApiLocation(toLocation);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: classes.form,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.select__from,\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"\\xA0TRAVEL FROM\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        // placeholder=\"From: city\"\n        onChange: event => {\n          setCityNameFrom(event.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.select__to,\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"\\xA0TRAVEL TO\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        // placeholder=\"To: city\"\n        onChange: event => {\n          setCityNameTo(event.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.datepicker,\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"\\xA0SELECT DATE\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\" //placeholder={todaysDate}\n        ,\n        defaultValue: todaysDate.toString // min={todaysDate.toString}\n\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.button__search,\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: btnActionHandler,\n        children: \"Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\n\n_s(InputForm, \"/Fs2ZvAz3HfIA9jEMlWFSvsrUzY=\", false, function () {\n  return [useDispatch];\n});\n\n_c = InputForm;\nexport default InputForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"InputForm\");","map":{"version":3,"names":["classes","React","useState","useDispatch","useSelector","fromLocationActions","InputForm","todaysDate","date","Date","day","getDate","month","getMonth","year","getFullYear","today","dispatch","cityNameFrom","setCityNameFrom","cityNameTo","setCityNameTo","fromApiLocation","setFromApiLocation","toApiLocation","setToApiLocation","options","method","headers","fetchLocationHandler","cityName","fetch","then","response","json","data","console","log","longitude","latitude","lon","lat","uploadLocation","catch","err","error","btnActionHandler","fromLocation","toLocation","form","select__from","event","target","value","select__to","datepicker","toString","button__search"],"sources":["C:/Users/dell/Desktop/travel_app/src/components/InputForm.js"],"sourcesContent":["import classes from \"./InputForm.module.css\";\r\nimport React, { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { fromLocationActions } from \"../store/index\";\r\n\r\nconst InputForm = () => {\r\n  const todaysDate = () => {\r\n    const date = new Date();\r\n\r\n    let day = date.getDate();\r\n    let month = date.getMonth() + 1;\r\n    let year = date.getFullYear();\r\n\r\n    if (month < 10) month = \"0\" + month;\r\n    if (day < 10) day = \"0\" + day;\r\n\r\n    const today = year + \"-\" + month + \"-\" + day;\r\n\r\n    return today;\r\n  };\r\n\r\n  const dispatch = useDispatch();\r\n  const [cityNameFrom, setCityNameFrom] = useState(\"\");\r\n  const [cityNameTo, setCityNameTo] = useState(\"\");\r\n  const [fromApiLocation, setFromApiLocation] = useState({});\r\n  const [toApiLocation, setToApiLocation] = useState({});\r\n\r\n  const options = {\r\n    method: \"GET\",\r\n    headers: {\r\n      \"X-Api-Key\": \"w/ji57sNSaUz/bxWAIxJ3A==UmFkltyZkWVv9tvU\",\r\n    },\r\n  };\r\n\r\n  function fetchLocationHandler(cityName) {\r\n    fetch(`https://api.api-ninjas.com/v1/city?name=${cityName}`, options)\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        console.log(\r\n          data[0].longitude + \" i \" + data[0].latitude + \" lokacija !\"\r\n        );\r\n        const lon = data[0].longitude;\r\n        const lat = data[0].latitude;\r\n        dispatch(fromLocationActions.uploadLocation);\r\n        return { lon, lat };\r\n      })\r\n      .catch((err) => console.error(err));\r\n  }\r\n\r\n  const btnActionHandler = () => {\r\n    const fromLocation = fetchLocationHandler(cityNameFrom);\r\n    const toLocation = fetchLocationHandler(cityNameTo);\r\n    setFromApiLocation(fromLocation);\r\n    setToApiLocation(toLocation);\r\n  };\r\n\r\n  return (\r\n    <form className={classes.form}>\r\n      <div className={classes.select__from}>\r\n        <span>&nbsp;TRAVEL FROM</span>\r\n        <input\r\n          // placeholder=\"From: city\"\r\n          onChange={(event) => {\r\n            setCityNameFrom(event.target.value);\r\n          }}\r\n        ></input>\r\n      </div>\r\n      <div className={classes.select__to}>\r\n        <span>&nbsp;TRAVEL TO</span>\r\n        <input\r\n          // placeholder=\"To: city\"\r\n\r\n          onChange={(event) => {\r\n            setCityNameTo(event.target.value);\r\n          }}\r\n        ></input>\r\n      </div>\r\n      <div className={classes.datepicker}>\r\n        <span>&nbsp;SELECT DATE</span>\r\n        <input\r\n          type=\"date\"\r\n          //placeholder={todaysDate}\r\n          defaultValue={todaysDate.toString}\r\n          // min={todaysDate.toString}\r\n        ></input>\r\n      </div>\r\n      <div className={classes.button__search}>\r\n        <span></span>\r\n        <button type=\"button\" onClick={btnActionHandler}>\r\n          Search\r\n        </button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default InputForm;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}